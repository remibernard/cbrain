
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
-%>

<div class="menu_bar">
  <%= button_with_dropdown_menu("View Options") do %>
    <div class="view_options">
      <%= form_tag(exception_logs_path, :method => :get) do %>
        Number of exceptions per page:
        <%= select_tag( :per_page, options_for_select( [25, 50, 100, 200, 500 ], @per_page ), :class => "submit_onchange" ) %>
        <%= hidden_field_tag :update_filter, true %>
      <% end %>
    </div>
  <% end %>
  <%= external_submit_button "Delete Checked Exceptions", "exception_form", :class  => "button", :confirm  => "Are you sure you want to delete the selected logs?"  %>
</div>


<%= render :partial => 'shared/active_filters', :locals => {:model => :exception_log} %>


<div class="pagination">
  <span class="page_links">
    <%= will_paginate @exception_logs, :container => false %>
    (<%= pluralize @exception_logs.total_entries, "message" %>)
  </span>
</div>
<%= ajax_form_tag(url_for(:action => :destroy), :method => :delete, :datatype => :script, :id => "exception_form") do %>
  <%= index_table(@exception_logs, :class => "resource_list") do |t| %>
    <%
      t.column(select_all_checkbox("exception_log_checkbox")) do |e|
        check_box_tag("exception_log_ids[]", e.id, nil, :class  => 'exception_log_checkbox')
      end
      t.sort_column("Exception", 'ExceptionLog', 'exception_class', :filters => basic_filters_for(@filtered_scope, ExceptionLog.scoped, ExceptionLog, :exception_class)) { |e| link_to e.exception_class, e }
      t.describe_column("Message", :class => "left shrinkable") do |col|
        col.cell(:class => "left shrinkable") { |e| e.message }
      end
      t.sort_column("Method", 'ExceptionLog', 'request_method', :filters => basic_filters_for(@filtered_scope, ExceptionLog.scoped, ExceptionLog, :request_method), &:request_method)
      t.sort_column("Controller", 'ExceptionLog', 'request_controller', :filters => basic_filters_for(@filtered_scope, ExceptionLog.scoped, ExceptionLog, :request_controller), &:request_controller)
      t.sort_column("Action", 'ExceptionLog', 'request_action', :filters => basic_filters_for(@filtered_scope, ExceptionLog.scoped, ExceptionLog, :request_action), &:request_action)
      t.sort_column("Format", 'ExceptionLog', 'request_format', :filters => basic_filters_for(@filtered_scope, ExceptionLog.scoped, ExceptionLog, :request_format), &:request_format)
      t.sort_column("User", 'User', 'login', :filters => association_filters_for(@filtered_scope, ExceptionLog.scoped, "exception_log", "user", :name_method => "login")) { |e| link_to_user_with_tooltip(e.user) }
      t.sort_column("Revision", 'ExceptionLog', 'revision_no', :filters => basic_filters_for(@filtered_scope, ExceptionLog.scoped, ExceptionLog, :revision_no), &:revision_no)
      t.reverse_sort_column("Raised at", 'ExceptionLog', 'created_at') { |e| to_localtime(e.created_at,:datetime) }
    %>
  <% end %>
<% end %>
